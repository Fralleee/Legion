---------------------------------------------------------------------------------------------
# Day 0
---------------------------------------------------------------------------------------------
- Upgrade unity to 2018.2
- Test the shader example project
- Import shaders from bookmark
- Test the autoreferencer script

- Eyes are not used as of now, implement their usage
- Remove LookAt-script
- Add LoS to find targets

# Change folder structure
http://blog.theknightsofunity.com/7-ways-keep-unity-project-organized/

Don’t try to move context-specific assets to the general directories. 
For instance, if there are materials generated from the model, 
don’t move them to Materials directory because later you won’t know where these come from.

- Libraries
- Animations
- Audio
	- Music
	- SFX
- Materials
- Models
- Plugins (probuilder, textmesh pro, e.t.c)
- Prefabs
- Resources
- Textures
- Sandbox (Use Sandbox directory for any experiments you’re not entirely sure about)
  E.g. NewAbilitySiege, AnimationTesting	 
- Scenes
	- Levels
	- Other
- Scripts
	- Editor
- Shaders

#Scene structure
- Management
- GUI
- Cameras
- Lights
- World
	- Terrain
	- Props
- _Dynamic
---------------------------------------------------------------------------------------------

---------------------------------------------------------------------------------------------
# Day 1
---------------------------------------------------------------------------------------------
# Abilities
- Add particles to spell cast
- ReleaseCast should have different implementations:
  Projectile (hand in front)
	AOE	(both hands up in the air)
	DirectTarget (hand up in the air)

# Build system
- Rename placeable

# Organize Fralle.Systems (should only contain reusable independent generic code)

---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
# Day 2
---------------------------------------------------------------------------------------------
# Build/spawn/attack flow
- Build a test scene for this flow
- Apply builders teamData to building
- Unit should get team data from building that spawns it
- Unit should work without getting teamdata (maybe become neutral?)
- Complete the flow from build building => spawn unit => attack enemies

# Use a pluggable state manager for game manager
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
# Day 3-4
---------------------------------------------------------------------------------------------
# UI
- Organize scripts used for UI (better names, and generic usage)
- Build UI should be activated based on Event/State
  Build controls should be:
	LMB: Upgrade
	RMB: Sell
	1-6: Basic units	
	Q: Last unit
	E: ???
	R: Ultimate unit 1
	F: Ultimate unit 2	
- When a spell/building cannot be cast/afforded it should be red
- Ability UI should have functionality Flashing, where it indicates with a pulsating glowing border and shine.
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
# Day 5
---------------------------------------------------------------------------------------------
# Animations
- Organize animations (wizard, units, shared)
  Animations should be both BR and Regular
- Attack animation for ranged and melee
  Bow animation
	Sword attack animation
	
# Death ragdolls
---------------------------------------------------------------------------------------------

---------------------------------------------------------------------------------------------
# Day 6-7
---------------------------------------------------------------------------------------------
# Caster (player)
- Create caster behaviour, kind of same as Builder
- Make castable scriptableobject
  - Cooldown
  - Cost
  - Spell prefab (ISpell)  
- Try reconstructing Launch as an ability instead
  Probably need an enum that says AbilityType [Default, Attack, Ultimate]
---------------------------------------------------------------------------------------------

	
---------------------------------------------------------------------------------------------
# Day 8
---------------------------------------------------------------------------------------------
# Launch & Siege
- Implement Siege-mode
- When using an ultimate, make the sky turn dark
  A lot of particle effects! 	
- Figure out why you get blocked sometimes
- Sometimes it bugs when landing on uneven terrain
	
# Armor/damage types
- Use scriptableobjects, ryan hipple => elements talk (unite 2017)
---------------------------------------------------------------------------------------------

	

	
	
	
	
################################################
#										LATER											 #
################################################
	
	
# Improve character
- https://www.youtube.com/watch?v=C2wwxd8SnKY

# En liten stuga men stor som en mansion innuti, kör portaltricket

# DamageController
- Implement damage directions
  Animate accordingly
  
# Controller
- Turn when above certain degree (45deg-)
  Otherwise turn characters upper body towards direction

# UI 
- Split up canvases
- Optimizations https://unity3d.com/how-to/unity-ui-optimization-tips
	
# InventorySystem
- Kolla unitegrejerna

# Game Info (menu, rules)
- THE WIZARD MUST BE STOPPED
- Orange vs Blue
- Last boss: The Wizard
